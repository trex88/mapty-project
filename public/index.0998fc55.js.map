{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["var $c1ce9d969bfa6909$exports = {};\nclass $c1ce9d969bfa6909$var$Workout {\n    date = new Date();\n    id = (Date.now() + \"\").slice(-10);\n    constructor(coords, distance, duration){\n        this.coords = coords;\n        this.distance = distance; //in km\n        this.duration = duration; // in min\n    }\n    _setDescription() {\n        // prettier-ignore\n        const months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n        ];\n        this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${months[this.date.getMonth()]} ${this.date.getDate()}`;\n    }\n}\nclass $c1ce9d969bfa6909$var$Running extends $c1ce9d969bfa6909$var$Workout {\n    type = \"running\";\n    constructor(coords, distance, duration, cadence){\n        super(coords, distance, duration);\n        this.cadence = cadence;\n        this.calcPace();\n        this._setDescription();\n    }\n    calcPace() {\n        // min/km\n        this.pace = this.duration / this.distance;\n        return this.pace;\n    }\n}\nclass $c1ce9d969bfa6909$var$Cycling extends $c1ce9d969bfa6909$var$Workout {\n    type = \"cycling\";\n    constructor(coords, distance, duration, elevationGain){\n        super(coords, distance, duration);\n        this.elevationGain = elevationGain;\n        this.calcSpeed();\n        this._setDescription();\n    }\n    calcSpeed() {\n        // km/h\n        this.speed = this.distance / (this.duration / 60);\n        return this.speed;\n    }\n}\n///////////////////////////////////////////////\n// APPLICATION ARCHITECTURE\nconst $c1ce9d969bfa6909$var$form = document.querySelector(\".form\");\nconst $c1ce9d969bfa6909$var$containerWorkouts = document.querySelector(\".workouts\");\nconst $c1ce9d969bfa6909$var$inputType = document.querySelector(\".form__input--type\");\nconst $c1ce9d969bfa6909$var$inputDistance = document.querySelector(\".form__input--distance\");\nconst $c1ce9d969bfa6909$var$inputDuration = document.querySelector(\".form__input--duration\");\nconst $c1ce9d969bfa6909$var$inputCadence = document.querySelector(\".form__input--cadence\");\nconst $c1ce9d969bfa6909$var$inputElevation = document.querySelector(\".form__input--elevation\");\nclass $c1ce9d969bfa6909$var$App {\n    #map;\n    #mapZoomLevel = 13;\n    #mapEvent;\n    #workouts = [];\n    #markersArr = [];\n    #targetWorkout = 1;\n    #editState = false;\n    constructor(){\n        // Get user's position\n        this._getPosition();\n        // Get data from local storage\n        // this._getLocalStorage();\n        // Attach event handler\n        $c1ce9d969bfa6909$var$form.addEventListener(\"submit\", (e)=>{\n            e.preventDefault();\n            if (!this.#editState) this._newWorkout();\n            else this._updateWorkout();\n        });\n        $c1ce9d969bfa6909$var$inputType.addEventListener(\"change\", this._toggleElevationField);\n        $c1ce9d969bfa6909$var$containerWorkouts.addEventListener(\"click\", (e)=>{\n            this._moveToPopup(e);\n            this._editWorkout(e);\n            this._deleteWorkout(e);\n        });\n    }\n    _getPosition() {\n        const options = {\n            enableHighAcuracy: true\n        };\n        if (navigator.geolocation) navigator.geolocation.getCurrentPosition(this._loadMap.bind(this), function() {\n            alert(\"Could not get your position\");\n        }, options);\n    }\n    _loadMap(position) {\n        const { latitude: latitude } = position.coords;\n        const { longitude: longitude } = position.coords;\n        const coords = [\n            latitude,\n            longitude\n        ];\n        this.#map = L.map(\"map\").setView(coords, this.#mapZoomLevel);\n        L.tileLayer(\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(this.#map);\n        // handling clicks on map\n        this.#map.on(\"click\", this._showForm.bind(this));\n        this.#workouts.forEach((work)=>{\n            this._renderWorkoutMarker(work);\n        });\n    }\n    _showForm(mapE) {\n        this.#mapEvent = mapE;\n        $c1ce9d969bfa6909$var$form.classList.remove(\"hidden\");\n        $c1ce9d969bfa6909$var$inputDistance.focus();\n    }\n    _hideForm() {\n        // Empty inputs\n        $c1ce9d969bfa6909$var$inputDistance.value = $c1ce9d969bfa6909$var$inputDuration.value = $c1ce9d969bfa6909$var$inputCadence.value = $c1ce9d969bfa6909$var$inputElevation.value = \"\";\n        $c1ce9d969bfa6909$var$form.style.display = \"none\";\n        $c1ce9d969bfa6909$var$form.classList.add(\"hidden\");\n        setTimeout(()=>$c1ce9d969bfa6909$var$form.style.display = \"grid\", 1000);\n    }\n    _toggleElevationField() {\n        $c1ce9d969bfa6909$var$inputElevation.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\n        $c1ce9d969bfa6909$var$inputCadence.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\n    }\n    _resetFormFormat() {\n        const formRowsArr = $c1ce9d969bfa6909$var$form.children;\n        $c1ce9d969bfa6909$var$inputType.value = \"running\";\n        formRowsArr[3].classList.remove(\"form__row--hidden\");\n        formRowsArr[4].classList.add(\"form__row--hidden\");\n    }\n    _checkValidInput(...inputs) {\n        const allNumbers = inputs.every((inp)=>Number.isFinite(inp));\n        const allPositive = inputs.every((inp)=>inp > 0);\n        return allNumbers || allPositive;\n    }\n    _newWorkout() {\n        // Get data from form\n        const type = $c1ce9d969bfa6909$var$inputType.value;\n        const distance = +$c1ce9d969bfa6909$var$inputDistance.value;\n        const duration = +$c1ce9d969bfa6909$var$inputDuration.value;\n        const cadence = +$c1ce9d969bfa6909$var$inputCadence.value;\n        const elevation = +$c1ce9d969bfa6909$var$inputElevation.value;\n        const { lat: lat, lng: lng } = this.#mapEvent.latlng;\n        let workout;\n        // If workout running, create running object\n        if (type === \"running\") {\n            // Check if data is valid\n            if (!this._checkValidInput(distance, duration, cadence)) return alert(\"Inputs have to be positive numbers!\");\n            workout = new $c1ce9d969bfa6909$var$Running([\n                lat,\n                lng\n            ], distance, duration, cadence);\n        }\n        // If workout cycling, create cycling object\n        if (type === \"cycling\") {\n            // Check if data is valid\n            if (!this._checkValidInput(distance, duration, elevation)) return alert(\"Inputs have to be positive numbers!\");\n            workout = new $c1ce9d969bfa6909$var$Cycling([\n                lat,\n                lng\n            ], distance, duration, elevation);\n        }\n        // Add new object to workout array\n        this.#workouts.push(workout);\n        // Render workout on map as marker\n        this._renderWorkoutMarker(workout);\n        // Render workout on list\n        this._renderWorkout(workout);\n        // Hide form + Clear input fields\n        this._hideForm();\n    // Reset form format\n    // this._resetFormFormat();\n    // Set local storage to all workouts\n    // this._setLocalStorage();\n    }\n    _renderWorkoutMarker(workout) {\n        const marker = L.marker(workout.coords);\n        marker.addTo(this.#map).bindPopup(L.popup({\n            maxWidth: 250,\n            minWidth: 100,\n            autoClose: false,\n            closeOnClick: false,\n            className: `${workout.type}-popup`\n        })).setPopupContent(`${workout.type === \"running\" ? \"\\uD83C\\uDFC3\\u200D\\u2642\\uFE0F\" : \"\\uD83D\\uDEB4\\u200D\\u2640\\uFE0F\"} ${workout.description}`).openPopup();\n        this.#markersArr.push(marker);\n    }\n    _renderWorkout(workout) {\n        let html = `\r\n      <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\r\n        <div>\r\n          <h2 class=\"workout__title\">${workout.description}</h2>\r\n          <button class=\"workout--btn btn--edit\" type=\"button\">Edit</button>\r\n          <button class=\"workout--btn btn--delete\" type=\"button\">Delete</button>\r\n        </div>\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">${workout.type === \"running\" ? \"\\uD83C\\uDFC3\\u200D\\u2642\\uFE0F\" : \"\\uD83D\\uDEB4\\u200D\\u2640\\uFE0F\"}</span>\r\n          <span class=\"workout__value\">${workout.distance}</span>\r\n          <span class=\"workout__unit\">km</span>\r\n        </div>\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">\\u{23F1}</span>\r\n          <span class=\"workout__value\">${workout.duration}</span>\r\n          <span class=\"workout__unit\">min</span>\r\n        </div>`;\n        if (workout.type === \"running\") html += `\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">\\u{26A1}\\u{FE0F}</span>\r\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\r\n          <span class=\"workout__unit\">min/km</span>\r\n        </div>\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">\\u{1F9B6}\\u{1F3FC}</span>\r\n          <span class=\"workout__value\">${workout.cadence.toFixed(1)}</span>\r\n          <span class=\"workout__unit\">spm</span>\r\n        </div>\r\n      </li>`;\n        if (workout.type === \"cycling\") html += `\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">\\u{26A1}\\u{FE0F}</span>\r\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\r\n          <span class=\"workout__unit\">km/h</span>\r\n        </div>\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">\\u{26F0}</span>\r\n          <span class=\"workout__value\">${workout.elevationGain}</span>\r\n          <span class=\"workout__unit\">m</span>\r\n        </div>\r\n      </li>`;\n        $c1ce9d969bfa6909$var$form.insertAdjacentHTML(\"afterend\", html);\n    }\n    _matchID(e) {\n        const workoutEl = e.target.closest(\".workout\");\n        if (!workoutEl) return;\n        const workout = this.#workouts.find((work)=>work.id === workoutEl.dataset.id);\n        return workout;\n    }\n    _moveToPopup(e) {\n        if (e.target.closest(\".workout\")) {\n            this.#targetWorkout = this._matchID(e);\n            this.#map.setView(this.#targetWorkout.coords, this.#mapZoomLevel, {\n                animate: true,\n                pan: {\n                    duration: 1\n                }\n            });\n        }\n    }\n    _editWorkout(e) {\n        if (!e.target.classList.contains(\"btn--edit\")) return;\n        this.#editState = true;\n        // Remove target workout element\n        const targetWorkoutLi = e.target.closest(\".workout\");\n        targetWorkoutLi.remove();\n        // Fill form with that workout element data\n        this.#targetWorkout = this.#workouts.find((work)=>work.id === targetWorkoutLi.dataset.id);\n        // Show form and fill form\n        $c1ce9d969bfa6909$var$form.classList.remove(\"hidden\");\n        $c1ce9d969bfa6909$var$inputDistance.focus();\n        $c1ce9d969bfa6909$var$inputDistance.value = this.#targetWorkout.distance;\n        $c1ce9d969bfa6909$var$inputDuration.value = this.#targetWorkout.duration;\n        $c1ce9d969bfa6909$var$inputType.value = this.#targetWorkout.type;\n        if (this.#targetWorkout.type === \"running\") $c1ce9d969bfa6909$var$inputCadence.value = this.#targetWorkout.cadence;\n        if (this.#targetWorkout.type === \"cycling\") $c1ce9d969bfa6909$var$inputElevation.value = this.#targetWorkout.elevationGain;\n    }\n    _updateWorkout() {\n        const workout = this.#targetWorkout;\n        // Get data from form\n        const type = $c1ce9d969bfa6909$var$inputType.value;\n        const workoutDistance = +$c1ce9d969bfa6909$var$inputDistance.value;\n        const workoutDuration = +$c1ce9d969bfa6909$var$inputDuration.value;\n        // Get coords from target workout\n        const workoutCoords = workout.coords;\n        const workoutCadence = +$c1ce9d969bfa6909$var$inputCadence.value;\n        const workoutElevationGain = +$c1ce9d969bfa6909$var$inputElevation.value;\n        // Things happen when users choose different type\n        if (workout.type !== type) {\n            let newWorkoutObject;\n            if (type === \"running\") {\n                if (!this._checkValidInput(workoutDistance, workoutDuration, workoutCadence)) return alert(\"Inputs have to be positive numbers!\");\n                newWorkoutObject = new $c1ce9d969bfa6909$var$Running(workoutCoords, workoutDistance, workoutDuration, workoutCadence);\n            }\n            if (type === \"cycling\") {\n                if (!this._checkValidInput(workoutDistance, workoutDuration, workoutElevationGain)) return alert(\"Inputs have to be positive numbers!\");\n                newWorkoutObject = new $c1ce9d969bfa6909$var$Cycling(workoutCoords, workoutDistance, workoutDuration, workoutElevationGain);\n            }\n            this.#workouts.splice(this.#workouts.indexOf(workout), 1, newWorkoutObject);\n            this._renderWorkout(newWorkoutObject);\n            // Remove previous marker from map (execute first) and then, from #markersArr.\n            this.#markersArr[this.#workouts.indexOf(newWorkoutObject)].remove();\n            this.#markersArr.splice(this.#workouts.indexOf(newWorkoutObject), 1);\n            // After that, add new marker.\n            this._renderWorkoutMarker(newWorkoutObject);\n        }\n        // Things happen when users keep the same type\n        if (workout.type === type) {\n            if (workout.type === \"running\") {\n                if (!this._checkValidInput(workoutDistance, workoutDuration, workoutCadence)) return alert(\"Inputs have to be positive numbers!\");\n                workout.distance = workoutDistance;\n                workout.duration = workoutDuration;\n                workout.cadence = workoutCadence;\n                workout.calcPace();\n                this._renderWorkout(workout);\n            }\n            if (workout.type === \"cycling\") {\n                if (!this._checkValidInput(workoutDistance, workoutDuration, workoutElevationGain)) return alert(\"Inputs have to be positive numbers!\");\n                workout.distance = workoutDistance;\n                workout.duration = workoutDuration;\n                workout.elevationGain = workoutElevationGain;\n                workout.calcSpeed();\n                this._renderWorkout(workout);\n            }\n        }\n        // Change edit state\n        this.#editState = false;\n        // Hide form + Clear input fields\n        this._hideForm();\n    // Set local storage to all workouts\n    // this._setLocalStorage();\n    }\n    _deleteWorkout(e) {\n        if (!e.target.classList.contains(\"btn--delete\")) return;\n        // Identify the ID of the <li>\n        this.#targetWorkout = this._matchID(e);\n        if (!this.#targetWorkout) return;\n        // Delete from #workouts arrray based on the id\n        const workoutIndex = this.#workouts.findIndex((el)=>el.id === this.#targetWorkout.id);\n        this.#workouts.splice(workoutIndex, 1);\n        // Delete html\n        const allWorkoutsElArr = Array.from($c1ce9d969bfa6909$var$containerWorkouts.querySelectorAll(\".workout\"));\n        const targetWorkoutEl = allWorkoutsElArr.find((el)=>el.getAttribute(\"data-id\") === this.#targetWorkout.id);\n        targetWorkoutEl.remove();\n        // Delete marker + popup from map\n        this.#markersArr[workoutIndex].remove();\n        // Delete marker object from #markersArr\n        this.#markersArr.splice(workoutIndex, 1);\n    }\n    _setLocalStorage() {\n        localStorage.setItem(\"workouts\", JSON.stringify(this.#workouts));\n    }\n    _getLocalStorage() {\n        const data = JSON.parse(localStorage.getItem(\"workouts\"));\n        if (!data) return;\n        this.#workouts = data;\n        this.#workouts.forEach((work)=>{\n            this._renderWorkout(work);\n        });\n    }\n    reset() {\n        localStorage.removeItem(\"workouts\");\n        location.reload();\n    }\n}\nconst $c1ce9d969bfa6909$var$app = new $c1ce9d969bfa6909$var$App(); // app.reset();\n\n\n//# sourceMappingURL=index.0998fc55.js.map\n","class Workout {\r\n  date = new Date();\r\n  id = (Date.now() + '').slice(-10);\r\n\r\n  constructor(coords, distance, duration) {\r\n    this.coords = coords;\r\n    this.distance = distance; //in km\r\n    this.duration = duration; // in min\r\n  }\r\n\r\n  _setDescription() {\r\n    // prettier-ignore\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\r\n      months[this.date.getMonth()]\r\n    } ${this.date.getDate()}`;\r\n  }\r\n}\r\n\r\nclass Running extends Workout {\r\n  type = 'running';\r\n  constructor(coords, distance, duration, cadence) {\r\n    super(coords, distance, duration);\r\n    this.cadence = cadence;\r\n    this.calcPace();\r\n    this._setDescription();\r\n  }\r\n\r\n  calcPace() {\r\n    // min/km\r\n    this.pace = this.duration / this.distance;\r\n    return this.pace;\r\n  }\r\n}\r\n\r\nclass Cycling extends Workout {\r\n  type = 'cycling';\r\n  constructor(coords, distance, duration, elevationGain) {\r\n    super(coords, distance, duration);\r\n    this.elevationGain = elevationGain;\r\n    this.calcSpeed();\r\n    this._setDescription();\r\n  }\r\n\r\n  calcSpeed() {\r\n    // km/h\r\n    this.speed = this.distance / (this.duration / 60);\r\n    return this.speed;\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////\r\n// APPLICATION ARCHITECTURE\r\n\r\nconst form = document.querySelector('.form');\r\nconst containerWorkouts = document.querySelector('.workouts');\r\nconst inputType = document.querySelector('.form__input--type');\r\nconst inputDistance = document.querySelector('.form__input--distance');\r\nconst inputDuration = document.querySelector('.form__input--duration');\r\nconst inputCadence = document.querySelector('.form__input--cadence');\r\nconst inputElevation = document.querySelector('.form__input--elevation');\r\n\r\nclass App {\r\n  #map;\r\n  #mapZoomLevel = 13;\r\n  #mapEvent;\r\n  #workouts = [];\r\n  #markersArr = [];\r\n  #targetWorkout = 1;\r\n  #editState = false;\r\n\r\n  constructor() {\r\n    // Get user's position\r\n    this._getPosition();\r\n\r\n    // Get data from local storage\r\n    // this._getLocalStorage();\r\n\r\n    // Attach event handler\r\n    form.addEventListener('submit', e => {\r\n      e.preventDefault();\r\n      if (!this.#editState) {\r\n        this._newWorkout();\r\n      } else {\r\n        this._updateWorkout();\r\n      }\r\n    });\r\n\r\n    inputType.addEventListener('change', this._toggleElevationField);\r\n\r\n    containerWorkouts.addEventListener('click', e => {\r\n      this._moveToPopup(e);\r\n      this._editWorkout(e);\r\n      this._deleteWorkout(e);\r\n    });\r\n  }\r\n\r\n  _getPosition() {\r\n    const options = {\r\n      enableHighAcuracy: true,\r\n    };\r\n\r\n    if (navigator.geolocation)\r\n      navigator.geolocation.getCurrentPosition(\r\n        this._loadMap.bind(this),\r\n        function () {\r\n          alert('Could not get your position');\r\n        },\r\n        options\r\n      );\r\n  }\r\n\r\n  _loadMap(position) {\r\n    const { latitude } = position.coords;\r\n    const { longitude } = position.coords;\r\n\r\n    const coords = [latitude, longitude];\r\n\r\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\r\n      attribution:\r\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(this.#map);\r\n\r\n    // handling clicks on map\r\n    this.#map.on('click', this._showForm.bind(this));\r\n\r\n    this.#workouts.forEach(work => {\r\n      this._renderWorkoutMarker(work);\r\n    });\r\n  }\r\n\r\n  _showForm(mapE) {\r\n    this.#mapEvent = mapE;\r\n    form.classList.remove('hidden');\r\n    inputDistance.focus();\r\n  }\r\n\r\n  _hideForm() {\r\n    // Empty inputs\r\n    inputDistance.value =\r\n      inputDuration.value =\r\n      inputCadence.value =\r\n      inputElevation.value =\r\n        '';\r\n\r\n    form.style.display = 'none';\r\n    form.classList.add('hidden');\r\n    setTimeout(() => (form.style.display = 'grid'), 1000);\r\n  }\r\n\r\n  _toggleElevationField() {\r\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\r\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\r\n  }\r\n\r\n  _resetFormFormat() {\r\n    const formRowsArr = form.children;\r\n    inputType.value = 'running';\r\n    formRowsArr[3].classList.remove('form__row--hidden');\r\n    formRowsArr[4].classList.add('form__row--hidden');\r\n  }\r\n\r\n  _checkValidInput(...inputs) {\r\n    const allNumbers = inputs.every(inp => Number.isFinite(inp));\r\n    const allPositive = inputs.every(inp => inp > 0);\r\n\r\n    return allNumbers || allPositive;\r\n  }\r\n\r\n  _newWorkout() {\r\n    // Get data from form\r\n    const type = inputType.value;\r\n    const distance = +inputDistance.value;\r\n    const duration = +inputDuration.value;\r\n    const cadence = +inputCadence.value;\r\n    const elevation = +inputElevation.value;\r\n    const { lat, lng } = this.#mapEvent.latlng;\r\n\r\n    let workout;\r\n\r\n    // If workout running, create running object\r\n    if (type === 'running') {\r\n      // Check if data is valid\r\n      if (!this._checkValidInput(distance, duration, cadence))\r\n        return alert('Inputs have to be positive numbers!');\r\n\r\n      workout = new Running([lat, lng], distance, duration, cadence);\r\n    }\r\n\r\n    // If workout cycling, create cycling object\r\n    if (type === 'cycling') {\r\n      // Check if data is valid\r\n      if (!this._checkValidInput(distance, duration, elevation))\r\n        return alert('Inputs have to be positive numbers!');\r\n\r\n      workout = new Cycling([lat, lng], distance, duration, elevation);\r\n    }\r\n\r\n    // Add new object to workout array\r\n    this.#workouts.push(workout);\r\n\r\n    // Render workout on map as marker\r\n    this._renderWorkoutMarker(workout);\r\n\r\n    // Render workout on list\r\n    this._renderWorkout(workout);\r\n\r\n    // Hide form + Clear input fields\r\n    this._hideForm();\r\n\r\n    // Reset form format\r\n    // this._resetFormFormat();\r\n\r\n    // Set local storage to all workouts\r\n    // this._setLocalStorage();\r\n  }\r\n\r\n  _renderWorkoutMarker(workout) {\r\n    const marker = L.marker(workout.coords);\r\n\r\n    marker\r\n      .addTo(this.#map)\r\n      .bindPopup(\r\n        L.popup({\r\n          maxWidth: 250,\r\n          minWidth: 100,\r\n          autoClose: false,\r\n          closeOnClick: false,\r\n          className: `${workout.type}-popup`,\r\n        })\r\n      )\r\n      .setPopupContent(\r\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\r\n      )\r\n      .openPopup();\r\n    this.#markersArr.push(marker);\r\n  }\r\n\r\n  _renderWorkout(workout) {\r\n    let html = `\r\n      <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\r\n        <div>\r\n          <h2 class=\"workout__title\">${workout.description}</h2>\r\n          <button class=\"workout--btn btn--edit\" type=\"button\">Edit</button>\r\n          <button class=\"workout--btn btn--delete\" type=\"button\">Delete</button>\r\n        </div>\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">${\r\n            workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\r\n          }</span>\r\n          <span class=\"workout__value\">${workout.distance}</span>\r\n          <span class=\"workout__unit\">km</span>\r\n        </div>\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">⏱</span>\r\n          <span class=\"workout__value\">${workout.duration}</span>\r\n          <span class=\"workout__unit\">min</span>\r\n        </div>`;\r\n\r\n    if (workout.type === 'running')\r\n      html += `\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">⚡️</span>\r\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\r\n          <span class=\"workout__unit\">min/km</span>\r\n        </div>\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">🦶🏼</span>\r\n          <span class=\"workout__value\">${workout.cadence.toFixed(1)}</span>\r\n          <span class=\"workout__unit\">spm</span>\r\n        </div>\r\n      </li>`;\r\n\r\n    if (workout.type === 'cycling')\r\n      html += `\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">⚡️</span>\r\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\r\n          <span class=\"workout__unit\">km/h</span>\r\n        </div>\r\n        <div class=\"workout__details\">\r\n          <span class=\"workout__icon\">⛰</span>\r\n          <span class=\"workout__value\">${workout.elevationGain}</span>\r\n          <span class=\"workout__unit\">m</span>\r\n        </div>\r\n      </li>`;\r\n\r\n    form.insertAdjacentHTML('afterend', html);\r\n  }\r\n\r\n  _matchID(e) {\r\n    const workoutEl = e.target.closest('.workout');\r\n\r\n    if (!workoutEl) return;\r\n\r\n    const workout = this.#workouts.find(\r\n      work => work.id === workoutEl.dataset.id\r\n    );\r\n\r\n    return workout;\r\n  }\r\n\r\n  _moveToPopup(e) {\r\n    if (e.target.closest('.workout')) {\r\n      this.#targetWorkout = this._matchID(e);\r\n      this.#map.setView(this.#targetWorkout.coords, this.#mapZoomLevel, {\r\n        animate: true,\r\n        pan: {\r\n          duration: 1,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  _editWorkout(e) {\r\n    if (!e.target.classList.contains('btn--edit')) return;\r\n\r\n    this.#editState = true;\r\n\r\n    // Remove target workout element\r\n    const targetWorkoutLi = e.target.closest('.workout');\r\n    targetWorkoutLi.remove();\r\n\r\n    // Fill form with that workout element data\r\n    this.#targetWorkout = this.#workouts.find(\r\n      work => work.id === targetWorkoutLi.dataset.id\r\n    );\r\n\r\n    // Show form and fill form\r\n    form.classList.remove('hidden');\r\n    inputDistance.focus();\r\n    inputDistance.value = this.#targetWorkout.distance;\r\n    inputDuration.value = this.#targetWorkout.duration;\r\n    inputType.value = this.#targetWorkout.type;\r\n\r\n    if (this.#targetWorkout.type === 'running')\r\n      inputCadence.value = this.#targetWorkout.cadence;\r\n    if (this.#targetWorkout.type === 'cycling')\r\n      inputElevation.value = this.#targetWorkout.elevationGain;\r\n  }\r\n\r\n  _updateWorkout() {\r\n    const workout = this.#targetWorkout;\r\n\r\n    // Get data from form\r\n    const type = inputType.value;\r\n    const workoutDistance = +inputDistance.value;\r\n    const workoutDuration = +inputDuration.value;\r\n\r\n    // Get coords from target workout\r\n    const workoutCoords = workout.coords;\r\n    const workoutCadence = +inputCadence.value;\r\n    const workoutElevationGain = +inputElevation.value;\r\n\r\n    // Things happen when users choose different type\r\n    if (workout.type !== type) {\r\n      let newWorkoutObject;\r\n\r\n      if (type === 'running') {\r\n        if (\r\n          !this._checkValidInput(\r\n            workoutDistance,\r\n            workoutDuration,\r\n            workoutCadence\r\n          )\r\n        )\r\n          return alert('Inputs have to be positive numbers!');\r\n\r\n        newWorkoutObject = new Running(\r\n          workoutCoords,\r\n          workoutDistance,\r\n          workoutDuration,\r\n          workoutCadence\r\n        );\r\n      }\r\n\r\n      if (type === 'cycling') {\r\n        if (\r\n          !this._checkValidInput(\r\n            workoutDistance,\r\n            workoutDuration,\r\n            workoutElevationGain\r\n          )\r\n        )\r\n          return alert('Inputs have to be positive numbers!');\r\n\r\n        newWorkoutObject = new Cycling(\r\n          workoutCoords,\r\n          workoutDistance,\r\n          workoutDuration,\r\n          workoutElevationGain\r\n        );\r\n      }\r\n\r\n      this.#workouts.splice(\r\n        this.#workouts.indexOf(workout),\r\n        1,\r\n        newWorkoutObject\r\n      );\r\n      this._renderWorkout(newWorkoutObject);\r\n\r\n      // Remove previous marker from map (execute first) and then, from #markersArr.\r\n      this.#markersArr[this.#workouts.indexOf(newWorkoutObject)].remove();\r\n      this.#markersArr.splice(this.#workouts.indexOf(newWorkoutObject), 1);\r\n\r\n      // After that, add new marker.\r\n      this._renderWorkoutMarker(newWorkoutObject);\r\n    }\r\n\r\n    // Things happen when users keep the same type\r\n    if (workout.type === type) {\r\n      if (workout.type === 'running') {\r\n        if (\r\n          !this._checkValidInput(\r\n            workoutDistance,\r\n            workoutDuration,\r\n            workoutCadence\r\n          )\r\n        )\r\n          return alert('Inputs have to be positive numbers!');\r\n\r\n        workout.distance = workoutDistance;\r\n        workout.duration = workoutDuration;\r\n        workout.cadence = workoutCadence;\r\n        workout.calcPace();\r\n\r\n        this._renderWorkout(workout);\r\n      }\r\n\r\n      if (workout.type === 'cycling') {\r\n        if (\r\n          !this._checkValidInput(\r\n            workoutDistance,\r\n            workoutDuration,\r\n            workoutElevationGain\r\n          )\r\n        )\r\n          return alert('Inputs have to be positive numbers!');\r\n        workout.distance = workoutDistance;\r\n        workout.duration = workoutDuration;\r\n        workout.elevationGain = workoutElevationGain;\r\n        workout.calcSpeed();\r\n\r\n        this._renderWorkout(workout);\r\n      }\r\n    }\r\n\r\n    // Change edit state\r\n    this.#editState = false;\r\n\r\n    // Hide form + Clear input fields\r\n    this._hideForm();\r\n\r\n    // Set local storage to all workouts\r\n    // this._setLocalStorage();\r\n  }\r\n\r\n  _deleteWorkout(e) {\r\n    if (!e.target.classList.contains('btn--delete')) return;\r\n\r\n    // Identify the ID of the <li>\r\n    this.#targetWorkout = this._matchID(e);\r\n\r\n    if (!this.#targetWorkout) return;\r\n\r\n    // Delete from #workouts arrray based on the id\r\n    const workoutIndex = this.#workouts.findIndex(\r\n      el => el.id === this.#targetWorkout.id\r\n    );\r\n    this.#workouts.splice(workoutIndex, 1);\r\n\r\n    // Delete html\r\n    const allWorkoutsElArr = Array.from(\r\n      containerWorkouts.querySelectorAll('.workout')\r\n    );\r\n    const targetWorkoutEl = allWorkoutsElArr.find(\r\n      el => el.getAttribute('data-id') === this.#targetWorkout.id\r\n    );\r\n    targetWorkoutEl.remove();\r\n\r\n    // Delete marker + popup from map\r\n    this.#markersArr[workoutIndex].remove();\r\n\r\n    // Delete marker object from #markersArr\r\n    this.#markersArr.splice(workoutIndex, 1);\r\n  }\r\n\r\n  _setLocalStorage() {\r\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\r\n  }\r\n\r\n  _getLocalStorage() {\r\n    const data = JSON.parse(localStorage.getItem('workouts'));\r\n\r\n    if (!data) return;\r\n\r\n    this.#workouts = data;\r\n\r\n    this.#workouts.forEach(work => {\r\n      this._renderWorkout(work);\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    localStorage.removeItem('workouts');\r\n    location.reload();\r\n  }\r\n}\r\n\r\nconst app = new App();\r\n\r\n// app.reset();\r\n"],"names":["$c1ce9d969bfa6909$var$Workout","date","Date","id","now","slice","constructor","coords","distance","duration","_setDescription","description","type","toUpperCase","months","getMonth","getDate","$c1ce9d969bfa6909$var$Running","cadence","calcPace","pace","$c1ce9d969bfa6909$var$Cycling","elevationGain","calcSpeed","speed","$c1ce9d969bfa6909$var$form","document","querySelector","$c1ce9d969bfa6909$var$containerWorkouts","$c1ce9d969bfa6909$var$inputType","$c1ce9d969bfa6909$var$inputDistance","$c1ce9d969bfa6909$var$inputDuration","$c1ce9d969bfa6909$var$inputCadence","$c1ce9d969bfa6909$var$inputElevation","map","mapZoomLevel","mapEvent","workouts","markersArr","targetWorkout","editState","_getPosition","addEventListener","e","preventDefault","_updateWorkout","_newWorkout","_toggleElevationField","_moveToPopup","_editWorkout","_deleteWorkout","navigator","geolocation","getCurrentPosition","_loadMap","bind","alert","enableHighAcuracy","position","latitude","longitude","L","setView","tileLayer","attribution","addTo","on","_showForm","forEach","work","_renderWorkoutMarker","mapE","classList","remove","focus","_hideForm","value","style","display","add","setTimeout","closest","toggle","_resetFormFormat","formRowsArr","children","_checkValidInput","inputs","allNumbers","every","inp","Number","isFinite","allPositive","workout","elevation","lat","lng","latlng","push","_renderWorkout","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","html","toFixed","insertAdjacentHTML","_matchID","workoutEl","target","find","dataset","animate","pan","contains","targetWorkoutLi","workoutDistance","workoutDuration","workoutCoords","workoutCadence","workoutElevationGain","newWorkoutObject","splice","indexOf","workoutIndex","findIndex","el","allWorkoutsElArr","Array","from","querySelectorAll","targetWorkoutEl","getAttribute","_setLocalStorage","localStorage","setItem","JSON","stringify","_getLocalStorage","data","parse","getItem","reset","removeItem","location","reload"],"version":3,"file":"index.0998fc55.js.map"}